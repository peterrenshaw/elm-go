
     ________                ______    
    / ____/ /___ ___        / ____/___ 
   / __/ / / __ `__ \______/ / __/ __ \
  / /___/ / / / / / /_____/ /_/ / /_/ /
 /_____/_/_/ /_/ /_/      \____/\____/ 


Why doesn't the elm compiler have a formatter built-in like haskell?

read <https://github.com/peterrenshaw/elm-go/blob/master/docs/HOWTO-improving-my-elm-tools.md>


WORK FLOW 

A work flow tool to use with the elm compiler. formatter and vim.
Here's some  use cases showing the options for compiling and 
formatting. Assumes you have both elm and elm-format in your
path. *

       --compile a file
       $ ./g.sh -i src/hello.elm -c
       File <src/hello.elm>
       Success! Compiled 1 module.                                          
       Status: format (0) compile (1)

       -- format a file
       $ ./g.sh -i src/hello.elm -f
       File <src/hello.elm>
       Processing file src/hello.elm
       Status: format (1) compile (0)

       -- compile then format
       $ ./g.sh -i src/hello.elm -a
       File <src/hello.elm>
       Success! Compiled 1 module.                                          
       Processing file src/hello.elm
       Status: format (1) compile (1)

       -- help
       $ ./g.sh -h
       (C)ompile a file
       $ ./g.sh.sh -i src/hello.elm -c

       (F)ormat a file
       $ ./g.sh.sh -i src/hello.elm -f

       (A) Compile then Format
       $ ./g.sh.sh -i src/hello.elm -a

       (H)elp show help message
       $ ./g.sh -h


Have fun.

2019NOV06
* added help
- cause I forget the options
* removed annoying compile info if no options supplied
* modified file help messages
 
2019OCT23
* changing filenames
* editing docs
* github
* tools, howto files 
* initial commit
